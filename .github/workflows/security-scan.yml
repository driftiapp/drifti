name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up PowerShell
      uses: PowerShell/PowerShell-Action@v1
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'
    
    - name: Install dependencies
      run: |
        npm ci
        cd backend && mvn install -DskipTests
    
    - name: Run security scan
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        ABUSEIPDB_API_KEY: ${{ secrets.ABUSEIPDB_API_KEY }}
        VIRUSTOTAL_API_KEY: ${{ secrets.VIRUSTOTAL_API_KEY }}
      run: |
        pwsh scripts/security-monitor.ps1 -Mode ci -AlertMethod slack -SlackWebhook $env:SLACK_WEBHOOK
    
    - name: Upload security report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: logs/security/
    
    - name: Fail if critical vulnerabilities
      if: failure()
      run: |
        echo "::error::Security scan failed due to critical vulnerabilities"
        exit 1

  dependency-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
    
    - name: Run OWASP dependency check
      uses: dependency-check/Dependency-Check_Action@main
      env:
        JAVA_HOME: ${{ env.JAVA_HOME }}
      with:
        project: 'Drifti'
        path: '.'
        format: 'HTML'
        args: >
          --suppression suppression.xml
          --failOnCVSS 7
          --enableRetired
    
    - name: Upload dependency report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: dependency-reports
        path: |
          reports/
          dependency-check-report.html

  ssl-cert-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Check SSL certificates
      run: |
        pwsh scripts/security-monitor.ps1 -Mode standalone -AlertMethod slack \
          -SlackWebhook ${{ secrets.SLACK_WEBHOOK }} \
          -ConfigPath config/ssl-check.json 