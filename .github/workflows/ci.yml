name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies
        run: |
          npm install
          cd frontend && npm install
          cd ../backend && npm install
          
      - name: Run Tests
        run: |
          npm test
          cd frontend && npm test
          cd ../backend && npm test
          
      - name: Run Auto-Fix
        run: npm run autofix
        
      - name: Security Scan
        run: |
          npm audit
          cd frontend && npm audit
          cd ../backend && npm audit
          
      - name: Build
        run: |
          npm run build
          cd frontend && npm run build
          cd ../backend && npm run build
          
      - name: Lint
        run: |
          npm run lint
          cd frontend && npm run lint
          cd ../backend && npm run lint

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies
        run: |
          npm install
          cd frontend && npm install
          cd ../backend && npm install
          
      - name: Build
        run: |
          npm run build
          cd frontend && npm run build
          cd ../backend && npm run build
          
      - name: Deploy Frontend to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          
      - name: Deploy Backend to Render
        run: |
          cd backend
          curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" 