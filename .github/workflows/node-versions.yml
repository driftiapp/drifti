name: Node.js CI/CD Workflow

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.20.2, 18.17.0, 20.11.1]
        mongodb-version: ['6.0']
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.8.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run tests
      run: npm test
      
    - name: Build project
      run: npm run build
      
    - name: Run security audit
      run: npm audit
      
    - name: Run dependency check
      run: npm outdated
      
    - name: Run bundle size analysis
      run: npm run analyze
      
    - name: Verify deployment
      run: npm run verify:deploy
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/drifti-test
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
        NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
        NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
        NEXT_PUBLIC_MAPBOX_API_KEY: ${{ secrets.NEXT_PUBLIC_MAPBOX_API_KEY }}
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
        NEXT_PUBLIC_ANALYTICS_ID: ${{ secrets.NEXT_PUBLIC_ANALYTICS_ID }}
        NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
        NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}
        NEXT_PUBLIC_FACEBOOK_APP_ID: ${{ secrets.NEXT_PUBLIC_FACEBOOK_APP_ID }}
        NEXT_PUBLIC_TWITTER_API_KEY: ${{ secrets.NEXT_PUBLIC_TWITTER_API_KEY }}
        NEXT_PUBLIC_TWITTER_API_SECRET: ${{ secrets.NEXT_PUBLIC_TWITTER_API_SECRET }}
        NEXT_PUBLIC_TWITTER_ACCESS_TOKEN: ${{ secrets.NEXT_PUBLIC_TWITTER_ACCESS_TOKEN }}
        NEXT_PUBLIC_TWITTER_ACCESS_SECRET: ${{ secrets.NEXT_PUBLIC_TWITTER_ACCESS_SECRET }}
        NEXT_PUBLIC_LINKEDIN_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_LINKEDIN_CLIENT_ID }}
        NEXT_PUBLIC_GITHUB_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_GITHUB_CLIENT_ID }}
        NEXT_PUBLIC_MICROSOFT_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_MICROSOFT_CLIENT_ID }}
        NEXT_PUBLIC_APPLE_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_APPLE_CLIENT_ID }}
        NEXT_PUBLIC_APPLE_TEAM_ID: ${{ secrets.NEXT_PUBLIC_APPLE_TEAM_ID }}
        NEXT_PUBLIC_APPLE_KEY_ID: ${{ secrets.NEXT_PUBLIC_APPLE_KEY_ID }}
        NEXT_PUBLIC_APPLE_PRIVATE_KEY: ${{ secrets.NEXT_PUBLIC_APPLE_PRIVATE_KEY }}
        NEXT_PUBLIC_APPLE_SCOPE: ${{ secrets.NEXT_PUBLIC_APPLE_SCOPE }}
        NEXT_PUBLIC_APPLE_REDIRECT_URI: ${{ secrets.NEXT_PUBLIC_APPLE_REDIRECT_URI }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.17.0'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Deploy to Firebase
      run: |
        npm install -g firebase-tools
        firebase deploy --token ${{ secrets.FIREBASE_TOKEN }}
        
    - name: Deploy to Render
      run: |
        curl -X POST "https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}" \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Accept: application/json"
 