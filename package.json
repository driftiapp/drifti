{
  "name": "driftix",
  "version": "1.0.0",
  "description": "DriftiX - Your Ultimate Transportation Platform",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:backend\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && npm run dev",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "test": "npm run test:frontend && npm run test:backend",
    "test:frontend": "cd frontend && npm test",
    "test:backend": "cd backend && npm test",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && npm run lint",
    "repair": "node scripts/self-repair.js",
    "autofix": "node scripts/auto-fix.js",
    "create-issue": "node scripts/create-issue.js",
    "prepare": "husky install",
    "verify:deployment": "node scripts/verify-deployment.js",
    "verify:deployment:ci": "cross-env CI=true node scripts/verify-deployment.js",
    "deploy": "npm run build:automated && npm run verify:deployment",
    "deploy:safe": "node scripts/deploy-rollback.js",
    "deploy:rollback": "node scripts/deploy-rollback.js --rollback",
    "deploy:verify": "node scripts/verify-deployment.js",
    "deploy:cleanup": "node scripts/deploy-rollback.js --cleanup",
    "verify:render": "node scripts/verify-render-firebase.js",
    "verify:firebase": "node scripts/verify-render-firebase.js --firebase-only",
    "verify:deploy": "npm run verify:render && npm run verify:firebase"
  },
  "dependencies": {
    "@octokit/rest": "^20.0.2",
    "axios": "^1.6.7",
    "firebase-admin": "^12.0.0",
    "ioredis": "^5.3.2",
    "mongoose": "^8.1.1",
    "openai": "^4.28.0"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "husky": "^9.0.11",
    "lint-staged": "^15.2.2"
  },
  "engines": {
    "node": ">=14.0.0"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ]
  }
}
